name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on:
  push:
    branches:
      - main
jobs:
  Windows:
    runs-on: windows-2022
    steps:
      - run: echo "OS - ${{ runner.os }}; Repository - ${{ github.repository }}; Branch - ${{ github.ref }}"
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: python --version
      - name: Install python packages
        run: python -m pip install -r requirements.txt
      - name: Execute python script
        run: python src/sample.py
      - name: Test with pytest
        run: |
          pytest --junitxml=junit/test-results.xml
      - name: Test summary
        uses: test-summary/action@v2
        with:
          paths: "junit/*.xml"
          show: "all"
        if: always()
      - name: Create package
        run: pyinstaller src/sample.py
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sample
          path: dist/sample/sample.exe
      - name: Create Release
        id: create_release
        uses: actions/create_release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sample.zip
          asset_name: sample.zip
          asset_content_type: application/zip
      - run: echo "üçè This job's status is ${{ job.status }}."

  Linux:
    runs-on: ubuntu-22.04
    steps:
      - run: echo "OS - ${{ runner.os }}; Repository - ${{ github.repository }}; Branch - ${{ github.ref }}"
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: python --version
      - name: Install python packages
        run: python -m pip install -r requirements.txt
      - name: Execute python script
        run: python src/sample.py
      - name: Create package
        run: pyinstaller src/sample.py
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
